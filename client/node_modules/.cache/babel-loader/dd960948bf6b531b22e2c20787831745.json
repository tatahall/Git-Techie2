{"ast":null,"code":"import _slicedToArray from \"/Users/binbinfan/project-3/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/binbinfan/project-3/client/src/context/users/UserState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport UserContext from './userContext';\nimport userReducer from './userReducer';\nimport { GET_USERS } from '../types';\n\nconst UserSate = props => {\n  const initialState = {\n    users: []\n  };\n\n  const _useReducer = useReducer(userReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //get users\n\n\n  const getUser = async () => {\n    try {\n      const res = await axios.get('https://api.github.com/users');\n      dispatch({\n        type: GET_USERS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  return React.createElement(UserContext.Provider, {\n    value: {\n      users: state.users,\n      getUser\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default UserSate;","map":{"version":3,"sources":["/Users/binbinfan/project-3/client/src/context/users/UserState.js"],"names":["React","useReducer","axios","UserContext","userReducer","GET_USERS","UserSate","props","initialState","users","state","dispatch","getUser","res","get","type","payload","data","err","CONTACT_ERROR","response","msg","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACIC,SADJ,QAEO,UAFP;;AAIA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,QAAMC,YAAY,GAAC;AACfC,IAAAA,KAAK,EAAC;AADS,GAAnB;;AADsB,sBAIGR,UAAU,CAACG,WAAD,EAAaI,YAAb,CAJb;AAAA;AAAA,QAIhBE,KAJgB;AAAA,QAITC,QAJS,oBAMtB;;;AACA,QAAMC,OAAO,GAAG,YAAY;AACxB,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,8BAAV,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEV,SADC;AAEPW,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CAAR;AAID,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEI,aADC;AAEPH,QAAAA,OAAO,EAAEE,GAAG,CAACE,QAAJ,CAAaC;AAFf,OAAD,CAAR;AAID;AACF,GAdH;;AAeA,SACI,oBAAC,WAAD,CAAa,QAAb;AACJ,IAAA,KAAK,EACH;AACEZ,MAAAA,KAAK,EAAEC,KAAK,CAACD,KADf;AAEEG,MAAAA;AAFF,KAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAODL,KAAK,CAACe,QAPL,CADJ;AAYH,CAlCD;;AAoCA,eAAehB,QAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport UserContext from './userContext';\nimport userReducer from './userReducer';\nimport {\n    GET_USERS\n} from '../types';\n\nconst UserSate = props => {\n    const initialState={\n        users:[]\n    };\n    const[state, dispatch] = useReducer(userReducer,initialState);\n\n    //get users\n    const getUser = async () => {\n        try {\n          const res = await axios.get('https://api.github.com/users');\n    \n          dispatch({\n            type: GET_USERS,\n            payload: res.data\n          });\n        } catch (err) {\n          dispatch({\n            type: CONTACT_ERROR,\n            payload: err.response.msg\n          });\n        }\n      };\n    return(\n        <UserContext.Provider\n    value={\n      {\n        users: state.users,\n        getUser\n\n      }}>\n      {props.children}\n    </UserContext.Provider>\n    );\n    \n};\n\nexport default UserSate;"]},"metadata":{},"sourceType":"module"}