{"ast":null,"code":"var _jsxFileName = \"/Users/binbinfan/project-3/client/src/components/layout/Search/Search.js\";\nimport React, { Component } from 'react';\nimport './Search.css';\nexport class Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      location: '',\n      repositories: '',\n      language: ''\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault(); // logic for triggering the alert\n\n      if (this.state.name === '' && this.state.location === '' && this.state.repositories === '' && this.state.language === '') {\n        this.props.showAlert('Please enter a search term...');\n      } // but if a search term has been entered into any of the fields, we proceed with searches\n      else {\n          if (this.state.name) {\n            this.props.searchUsers(this.state.name);\n            this.setState({\n              name: ''\n            });\n          } else {\n            this.props.searchManyParams(this.state.location, this.state.repositories, this.state.language);\n            this.setState({\n              location: ''\n            });\n            this.setState({\n              repositories: ''\n            });\n            this.setState({\n              language: ''\n            });\n          }\n\n          console.log('In Search.js, name is ' + this.state.name);\n          console.log('In Search.js, location is ' + this.state.location);\n          console.log('In Search.js, repositories is ' + this.state.repositories);\n          console.log('In Search.js, language is ' + this.state.language);\n        }\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"FormStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Search...\"), \" by user name\")), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Search Users\",\n      value: this.state.name,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, ' ', React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Or...\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"by two search parameters:\"), \" location + min. # of repos\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"by three search parameters:\"), \" location + min. # of repos + programming language\", ' ')), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"location\",\n      placeholder: \"Location\",\n      value: this.state.location,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"repositories\",\n      placeholder: \"Min # of Repos\",\n      value: this.state.repositories,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"language\",\n      placeholder: \"Programming Language\",\n      value: this.state.language,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      className: \"ButtonStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), this.props.showClearUsers ? React.createElement(\"button\", {\n      className: \"ButtonStyle2\",\n      onClick: this.props.clearUsers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Clear Users\") : null);\n  }\n\n}\nexport default Search;","map":{"version":3,"sources":["/Users/binbinfan/project-3/client/src/components/layout/Search/Search.js"],"names":["React","Component","Search","state","name","location","repositories","language","onSubmit","event","preventDefault","props","showAlert","searchUsers","setState","searchManyParams","console","log","handleInputChange","target","value","render","showClearUsers","clearUsers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Search.css';\n\nexport class Search extends Component {\n  state = {\n    name: '',\n    location: '',\n    repositories: '',\n    language: ''\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    // logic for triggering the alert\n    if (\n      this.state.name === '' &&\n      this.state.location === '' &&\n      this.state.repositories === '' &&\n      this.state.language === ''\n    ) {\n      this.props.showAlert('Please enter a search term...');\n    } // but if a search term has been entered into any of the fields, we proceed with searches\n    else {\n      if (this.state.name) {\n        this.props.searchUsers(this.state.name);\n        this.setState({ name: '' });\n      } else {\n        this.props.searchManyParams(\n          this.state.location,\n          this.state.repositories,\n          this.state.language\n        );\n        this.setState({ location: '' });\n        this.setState({ repositories: '' });\n        this.setState({ language: '' });\n      }\n      console.log('In Search.js, name is ' + this.state.name);\n      console.log('In Search.js, location is ' + this.state.location);\n      console.log('In Search.js, repositories is ' + this.state.repositories);\n      console.log('In Search.js, language is ' + this.state.language);\n    }\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.onSubmit} className='FormStyle'>\n          <p>\n            <strong>\n              <h2>Search...</h2> by user name\n            </strong>\n          </p>\n          <input\n            type='text'\n            name='name'\n            placeholder='Search Users'\n            value={this.state.name}\n            onChange={this.handleInputChange}\n          />\n          {/* <input type='submit' value='Search' className='ButtonStyle' />\n        </form>\n        <form onSubmit={this.onSubmit} className='form'> */}\n          <span>\n            {' '}\n            <p>\n              <h3>Or...</h3>\n            </p>\n            <p>\n              <strong>by two search parameters:</strong> location + min. # of\n              repos\n            </p>\n            <p>\n              <strong>by three search parameters:</strong> location + min. # of\n              repos + programming language{' '}\n            </p>\n          </span>\n          <input\n            type='text'\n            name='location'\n            placeholder='Location'\n            value={this.state.location}\n            onChange={this.handleInputChange}\n          />\n          <input\n            type='text'\n            name='repositories'\n            placeholder='Min # of Repos'\n            value={this.state.repositories}\n            onChange={this.handleInputChange}\n          />\n          <input\n            type='text'\n            name='language'\n            placeholder='Programming Language'\n            value={this.state.language}\n            onChange={this.handleInputChange}\n          />\n          <input type='submit' value='Search' className='ButtonStyle' />\n        </form>\n\n        {/* Clear Users button is shown only when a boolean value of true is passed from App.js, meaning that there are user cards displayed */}\n        {/* this.props.clearUsers is sent back up to App.js  */}\n        {this.props.showClearUsers ? (\n          <button className='ButtonStyle2' onClick={this.props.clearUsers}>\n            Clear Users\n          </button>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}