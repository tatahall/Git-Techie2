{"ast":null,"code":"import _objectSpread from \"/Users/binbinfan/Desktop/mernproject/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, CONTACT_ERROR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [...state.contacts, action.payload]\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(contact => contact._id !== action.payload)\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case CONTACT_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/binbinfan/Desktop/mernproject/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","CONTACT_ERROR","state","action","type","contacts","payload","filter","contact","_id","current","error"],"mappings":";AAAA,SACIA,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,aALJ,QAOS,UAPT;AASE,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAkB;AAC7B,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKP,WAAL;AACI,+BACOK,KADP;AAEIG,QAAAA,QAAQ,EAAC,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAmBF,MAAM,CAACG,OAA1B;AAFb;;AAIJ,SAAKR,cAAL;AACI,+BACOI,KADP;AAEIG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,MAAf,CAAsBC,OAAO,IAAGA,OAAO,CAACC,GAAR,KAAeN,MAAM,CAACG,OAAtD;AAFd;;AAIJ,SAAKP,WAAL;AACI,+BACOG,KADP;AAEIQ,QAAAA,OAAO,EAAEP,MAAM,CAACG;AAFpB;;AAIJ,SAAKN,aAAL;AACQ,+BACOE,KADP;AAEIQ,QAAAA,OAAO,EAAE;AAFb;;AAIR,SAAKT,aAAL;AACI,+BACOC,KADP;AAEIS,QAAAA,KAAK,EAACR,MAAM,CAACG;AAFjB;;AAIA;AACI,aAAOJ,KAAP;AA3BV;AA6BH,CA9BD","sourcesContent":["import {\n    ADD_CONTACT,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    CONTACT_ERROR,\n   \n  } from '../types';\n\n  export default (state, action) =>{\n      switch(action.type){\n        case ADD_CONTACT:\n            return{\n                ...state,\n                contacts:[...state.contacts,action.payload]\n            };\n        case DELETE_CONTACT:\n            return{\n                ...state,\n                contacts: state.contacts.filter(contact =>contact._id !==action.payload)\n            }\n        case SET_CURRENT:\n            return{\n                ...state,\n                current: action.payload\n            };\n        case CLEAR_CURRENT:\n                return{\n                    ...state,\n                    current: null\n                };\n        case CONTACT_ERROR:\n            return {\n                ...state,\n                error:action.payload\n            };\n            default:\n                return state;\n      }\n  }"]},"metadata":{},"sourceType":"module"}