{"ast":null,"code":"import _slicedToArray from \"/Users/binbinfan/project-3/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/binbinfan/project-3/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer'; // import setAuthToken from '../../utils/setAuthToken';\n\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(authReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Load User\n\n\n  const loadUser = async () => {\n    // if(localStorage.token){\n    //   setAuthToken(localStorage.token);\n    // }\n    try {\n      const res = await axios.get('/api/authenticate');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Login User\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/authenticate', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Logout\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); //Clear Error\n\n\n  const clearErrors = () => dispatch({\n    type: clearErrors\n  });\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      login,\n      logout,\n      clearErrors\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/binbinfan/project-3/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","login","logout","clearErrors","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\n// import setAuthToken from '../../utils/setAuthToken';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS\n} from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n//Load User\nconst loadUser = async()=>{\n  // if(localStorage.token){\n  //   setAuthToken(localStorage.token);\n  // }\n\n  try{\n    const res = await axios.get('/api/authenticate');\n\n    dispatch({\n      type:USER_LOADED,\n      payload: res.data\n    });\n  } catch(err){\n    dispatch({type:AUTH_ERROR});\n  }\n}\n// Register User\nconst register = async formData =>{\n  const config ={\n    headers:{\n      'Content-Type':'application/json'\n    }\n  }\n  try{\n      const res = await axios.post('/api/users', formData, config);\n\n  dispatch({\n    type: REGISTER_SUCCESS,\n    payload: res.data\n  });\n  loadUser();\n}catch(err){\n  dispatch({\n    type: REGISTER_FAIL,\n    payload: err.response.data.msg\n  });\n}\n}\n//Login User\nconst login = async formData =>{\n  const config ={\n    headers:{\n      'Content-Type':'application/json'\n    }\n  }\n  try{\n      const res = await axios.post('/api/authenticate', formData, config);\n\n  dispatch({\n    type: LOGIN_SUCCESS,\n    payload: res.data\n  });\n  loadUser();\n}catch(err){\n  dispatch({\n    type: LOGIN_FAIL,\n    payload: err.response.data.msg\n  });\n}\n}\n//Logout\nconst logout =()=>dispatch({type:LOGOUT});\n//Clear Error\nconst clearErrors=()=>dispatch({type:clearErrors});\n  \n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        login,\n        logout,\n        clearErrors\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}