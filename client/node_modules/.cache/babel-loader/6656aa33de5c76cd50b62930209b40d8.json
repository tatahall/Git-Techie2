{"ast":null,"code":"import _slicedToArray from \"/Users/binbinfan/Desktop/mernproject/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/binbinfan/Desktop/mernproject/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, CONTACT_ERROR, CLEAR_CURRENT, UPDATE_CONTACT, SET_CURRENT } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/profiles', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Delete contact\n\n\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`/api/profiles/${id}`);\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(`/api/profiles/${contact._id}`, contact, config);\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Filter Contacts\n  //Clear Filter\n\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      clearCurrent,\n      setCurrent,\n      updateContact,\n      deleteContact,\n      error: state.error\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/binbinfan/Desktop/mernproject/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","CONTACT_ERROR","CLEAR_CURRENT","UPDATE_CONTACT","SET_CURRENT","ContactState","props","initialState","contacts","current","error","state","dispatch","addContact","contact","config","headers","res","post","type","payload","data","err","response","msg","deleteContact","id","delete","setCurrent","clearCurrent","updateContact","put","_id","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  CONTACT_ERROR,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  SET_CURRENT\n \n} from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current:null,\n    error:null\n    \n  };\n   const [state, dispatch] = useReducer(contactReducer, initialState);\n\n   //Add Contact\n   const addContact =async contact =>{\n     const config ={\n       headers:{\n         'Content-Type': 'application/json'\n       }\n     }\n     try {\n       const res =await axios.post('/api/profiles',contact,config);\n       dispatch({type: ADD_CONTACT, payload:res.data});\n     } catch(err){\n       dispatch({type:CONTACT_ERROR, payload: err.response.msg})\n     }\n   };\n\n   \n   //Delete contact\n   const deleteContact = async id => {\n    try {\n      await axios.delete(`/api/profiles/${id}`);\n\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n   //Set Current Contact\n   const setCurrent = contact => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n   //Clear Current Contact\n   const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n   //Update Contact\n   const updateContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(\n        `/api/profiles/${contact._id}`,\n        contact,\n        config\n      );\n\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n   //Filter Contacts\n   //Clear Filter\n\n  return (\n    <ContactContext.Provider\n    value={\n      {\n        contacts: state.contacts,\n        current: state.current,\n        addContact,\n        clearCurrent,\n        setCurrent,\n        updateContact,\n        deleteContact,\n        error:state.error\n\n      }}>\n      {props.children}\n    </ContactContext.Provider>\n  )\n};\n\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}