{"ast":null,"code":"var _jsxFileName = \"/Users/binbinfan/project-3/client/src/components/layout/Search/Search.js\";\nimport React, { Component } from 'react';\nimport './Search.css';\nexport class Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      location: '',\n      repositories: '',\n      language: ''\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault(); // logic for triggering the alert\n\n      if (this.state.name === '' && this.state.location === '' && this.state.repositories === '' && this.state.language === '') {\n        this.props.showAlert('Please enter a search term...');\n      } // but if a search term has been entered into any of the fields, we proceed with searches\n      else {\n          if (this.state.name) {\n            this.props.searchUsers(this.state.name);\n            this.setState({\n              name: ''\n            });\n          } else {\n            this.props.searchManyParams(this.state.location, this.state.repositories, this.state.language);\n            this.setState({\n              location: ''\n            });\n            this.setState({\n              repositories: ''\n            });\n            this.setState({\n              language: ''\n            });\n          }\n\n          console.log('In Search.js, name is ' + this.state.name);\n          console.log('In Search.js, location is ' + this.state.location);\n          console.log('In Search.js, repositories is ' + this.state.repositories);\n          console.log('In Search.js, language is ' + this.state.language);\n        }\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"location\",\n      placeholder: \"Search By Location\",\n      value: this.state.location,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"OR\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Search Users\",\n      value: this.state.name,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Search\",\n      className: \"ButtonStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default Search;","map":{"version":3,"sources":["/Users/binbinfan/project-3/client/src/components/layout/Search/Search.js"],"names":["React","Component","Search","state","name","location","repositories","language","onSubmit","event","preventDefault","props","showAlert","searchUsers","setState","searchManyParams","console","log","handleInputChange","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Search.css';\n\nexport class Search extends Component {\n  state = {\n    name:'',\n    location: '',\n    repositories: '',\n    language: ''\n  };\n\n  onSubmit = event => {\n    event.preventDefault();\n\n    // logic for triggering the alert\n    if (\n      this.state.name === '' &&\n      this.state.location === '' &&\n      this.state.repositories === '' &&\n      this.state.language === ''\n    ) {\n      this.props.showAlert('Please enter a search term...');\n    } // but if a search term has been entered into any of the fields, we proceed with searches\n    else {\n      if (this.state.name) {\n        this.props.searchUsers(this.state.name);\n        this.setState({ name: '' });\n      } else {\n        this.props.searchManyParams(\n          this.state.location,\n          this.state.repositories,\n          this.state.language\n        );\n        this.setState({ location: '' });\n        this.setState({ repositories: '' });\n        this.setState({ language: '' });\n      }\n      console.log('In Search.js, name is ' + this.state.name);\n      console.log('In Search.js, location is ' + this.state.location);\n      console.log('In Search.js, repositories is ' + this.state.repositories);\n      console.log('In Search.js, language is ' + this.state.language);\n    }\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.onSubmit} className='form'>\n          <input\n            type='text'\n            name='location'\n            placeholder='Search By Location'\n            value={this.state.location}\n            onChange={this.handleInputChange}\n          />\n          <h2 className=\"text-primary\">OR</h2>\n           <input\n            type='text'\n            name='name'\n            placeholder='Search Users'\n            value={this.state.name}\n            onChange={this.handleInputChange}\n          />\n           \n          <input type='submit' value='Search' className='ButtonStyle' />\n        </form>\n\n      \n      </div>\n      \n    );\n  }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}