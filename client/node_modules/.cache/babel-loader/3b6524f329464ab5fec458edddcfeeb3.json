{"ast":null,"code":"import _objectSpread from \"/Users/binbinfan/Desktop/mernproject/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/binbinfan/Desktop/mernproject/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/binbinfan/Desktop/mernproject/client/src/components/auth/Login.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport AuthContext from '../../context/auth/authContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Login = props => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const setAlert = alertContext.setAlert;\n  const login = authContext.login,\n        error = authContext.error,\n        clearErrors = authContext.clearErrors,\n        isAuthenticated = authContext.isAuthenticated;\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n\n    if (error === \"Invalid Credential\") {\n      setAlert(error, 'danger');\n      clearErrors();\n    } //eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]);\n\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const email = user.email,\n        password = user.password;\n\n  const onChange = e => setUser(_objectSpread({}, user, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (email === '' || password === '') {\n      setAlert('Please fill in all fields', 'danger');\n    } else {\n      login({\n        email,\n        password\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Account \", React.createElement(\"span\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Login\")), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/binbinfan/Desktop/mernproject/client/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","AuthContext","AlertContext","Login","props","alertContext","authContext","setAlert","login","error","clearErrors","isAuthenticated","history","push","email","password","user","setUser","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAS;AACnB,QAAMC,YAAY,GAAGN,UAAU,CAACG,YAAD,CAA/B;AACA,QAAMI,WAAW,GAAGP,UAAU,CAACE,WAAD,CAA9B;AAFmB,QAGZM,QAHY,GAGAF,YAHA,CAGZE,QAHY;AAAA,QAIZC,KAJY,GAIgCF,WAJhC,CAIZE,KAJY;AAAA,QAINC,KAJM,GAIgCH,WAJhC,CAING,KAJM;AAAA,QAIAC,WAJA,GAIgCJ,WAJhC,CAIAI,WAJA;AAAA,QAIaC,eAJb,GAIgCL,WAJhC,CAIaK,eAJb;AAKnBX,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGW,eAAH,EAAmB;AACfP,MAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACH;;AACD,QAAGJ,KAAK,KAAG,oBAAX,EAAgC;AAC5BF,MAAAA,QAAQ,CAACE,KAAD,EAAO,QAAP,CAAR;AACAC,MAAAA,WAAW;AACd,KAPS,CAQV;;AACH,GATQ,EASP,CAACD,KAAD,EAAOE,eAAP,EAAuBP,KAAK,CAACQ,OAA7B,CATO,CAAT;;AALmB,oBAeKd,QAAQ,CAAC;AAC7BgB,IAAAA,KAAK,EAAC,EADuB;AAE7BC,IAAAA,QAAQ,EAAC;AAFoB,GAAD,CAfb;AAAA;AAAA,QAeZC,IAfY;AAAA,QAeNC,OAfM;;AAAA,QAmBZH,KAnBY,GAmBOE,IAnBP,CAmBZF,KAnBY;AAAA,QAmBLC,QAnBK,GAmBOC,IAnBP,CAmBLD,QAnBK;;AAoBnB,QAAMG,QAAQ,GAAGC,CAAC,IAAEF,OAAO,mBAAMD,IAAN;AAAY,KAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAtC,KAA3B;;AACA,QAAMC,QAAQ,GAAGJ,CAAC,IAAG;AACjBA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAGV,KAAK,KAAG,EAAR,IAAYC,QAAQ,KAAG,EAA1B,EAA6B;AACzBR,MAAAA,QAAQ,CAAC,2BAAD,EAA8B,QAA9B,CAAR;AACH,KAFD,MAEK;AACDC,MAAAA,KAAK,CAAC;AACFM,QAAAA,KADE;AAEFC,QAAAA;AAFE,OAAD,CAAL;AAIH;AACJ,GAVD;;AAWA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACY;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADZ,CADJ,EAII;AAAM,IAAA,QAAQ,EAAEQ,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAgC,IAAA,KAAK,EAAET,KAAvC;AAA8C,IAAA,QAAQ,EAAEI,QAAxD;AAAkE,IAAA,QAAQ,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,EAMI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAsC,IAAA,KAAK,EAAEH,QAA7C;AAAuD,IAAA,QAAQ,EAAEG,QAAjE;AAA2E,IAAA,QAAQ,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANJ,EAUI;AAAO,IAAA,IAAI,EAAG,QAAd;AAAuB,IAAA,KAAK,EAAC,OAA7B;AAAqC,IAAA,SAAS,EAAC,2BAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CAJJ,CADJ;AAmBH,CAnDD;;AAqDA,eAAef,KAAf","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\nimport AuthContext from '../../context/auth/authContext';\nimport AlertContext from '../../context/alert/alertContext';\nconst Login = (props)=>{\n    const alertContext = useContext(AlertContext);\n    const authContext = useContext(AuthContext);\n    const {setAlert} = alertContext;\n    const {login,error,clearErrors, isAuthenticated} = authContext;\n    useEffect(()=>{\n        if(isAuthenticated){\n            props.history.push('/');\n        }\n        if(error===\"Invalid Credential\"){\n            setAlert(error,'danger');\n            clearErrors();\n        }\n        //eslint-disable-next-line\n    },[error,isAuthenticated,props.history]);\n    const [user, setUser] = useState({\n        email:'',\n        password:''\n    });\n    const {email, password} = user;\n    const onChange = e=>setUser ({...user, [e.target.name]: e.target.value});\n    const onSubmit = e =>{\n        e.preventDefault();\n        if(email===''||password===''){\n            setAlert('Please fill in all fields', 'danger');\n        }else{\n            login({\n                email,\n                password\n            })\n        }\n    }\n    return(\n        <div>\n            <h1>\n                Account <span className=\"text-primary\">Login</span>\n            </h1>\n            <form onSubmit={onSubmit}>\n\n                <div className='form-group'>\n                    <label htmlFor='email'>Email Address</label>\n                    <input type='email' name='email'value={email} onChange={onChange} required/>\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='password'>Password</label>\n                    <input type='password' name='password'value={password} onChange={onChange} required/>\n                </div>\n                <input type = \"submit\" value=\"Login\" className=\"btn btn-primary btn-block\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}