{"ast":null,"code":"import _objectSpread from \"/Users/binbinfan/Desktop/mernproject/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return _objectSpread({}, state, {}, action.payload, {\n        isAutheticated: true,\n        loading: false\n      });\n\n    case REGISTER_FAIL:\n      localStorage.removeItem('token');\n      return _objectSpread({}, state, {\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/binbinfan/Desktop/mernproject/client/src/context/auth/authReducer.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","state","action","type","localStorage","setItem","payload","token","isAutheticated","loading","removeItem","isAuthenticated","user","error"],"mappings":";AAAA,SACIA,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,aALJ,EAMIC,UANJ,EAOIC,MAPJ,EAQIC,YARJ,QASS,UATT;AAWE,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,gBAAL;AACIW,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BH,MAAM,CAACI,OAAP,CAAeC,KAA5C;AACA,+BACON,KADP,MAEOC,MAAM,CAACI,OAFd;AAGIE,QAAAA,cAAc,EAAC,IAHnB;AAIIC,QAAAA,OAAO,EAAC;AAJZ;;AAMA,SAAKf,aAAL;AACIU,MAAAA,YAAY,CAACM,UAAb,CAAwB,OAAxB;AACA,+BACOT,KADP;AAEIM,QAAAA,KAAK,EAAC,IAFV;AAGII,QAAAA,eAAe,EAAC,KAHpB;AAIIF,QAAAA,OAAO,EAAC,KAJZ;AAKIG,QAAAA,IAAI,EAAC,IALT;AAMIC,QAAAA,KAAK,EAAEX,MAAM,CAACI;AANlB;;AAQV;AACE,aAAOL,KAAP;AApBJ;AAsBD,CAvBD","sourcesContent":["import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_ERRORS\n  } from '../types';\n  \n  export default (state, action) => {\n    switch (action.type) {\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token',action.payload.token);\n            return{\n                ...state,\n                ...action.payload,\n                isAutheticated:true,\n                loading:false\n            };\n            case REGISTER_FAIL:\n                localStorage.removeItem('token');\n                return{\n                    ...state,\n                    token:null,\n                    isAuthenticated:false,\n                    loading:false,\n                    user:null,\n                    error: action.payload\n                };\n      default:\n        return state;\n    }\n  };"]},"metadata":{},"sourceType":"module"}